{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MyFav\\\\OneDrive\\\\Desktop\\\\TempFD\\\\College\\\\Year 4\\\\Spring\\\\fullstack\\\\labs\\\\lab7\\\\crew\\\\client\\\\src\\\\components\\\\CrewmateInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CrewmateInfo = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [crewmate, setCrewmate] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchCrewmate = async () => {\n      try {\n        const {\n          data: crewmateData,\n          error\n        } = await supabase.from('Crewmates').select().eq('id', id).single();\n\n        if (error) {\n          throw error;\n        }\n\n        setCrewmate(crewmateData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching crewmate:', error.message);\n      }\n    };\n\n    fetchCrewmate();\n  }, [id]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!crewmate) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Crewmate not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: crewmate.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Author: \", crewmate.speed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", crewmate.color]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CrewmateInfo, \"F6XC4GNvMStIo2NoPixzSrhZyBU=\", false, function () {\n  return [useParams];\n});\n\n_c = CrewmateInfo;\nexport default CrewmateInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrewmateInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","supabase","CrewmateInfo","id","crewmate","setCrewmate","loading","setLoading","fetchCrewmate","data","crewmateData","error","from","select","eq","single","console","message","name","speed","color"],"sources":["C:/Users/MyFav/OneDrive/Desktop/TempFD/College/Year 4/Spring/fullstack/labs/lab7/crew/client/src/components/CrewmateInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { supabase } from '../client';\r\n\r\nconst CrewmateInfo = () => {\r\n  const { id } = useParams();\r\n  const [crewmate, setCrewmate] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchCrewmate = async () => {\r\n      try {\r\n        const { data: crewmateData, error } = await supabase\r\n          .from('Crewmates')\r\n          .select()\r\n          .eq('id', id)\r\n          .single();\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        setCrewmate(crewmateData);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching crewmate:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchCrewmate();\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!crewmate) {\r\n    return <div>Crewmate not found.</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{crewmate.name}</h2>\r\n      <p>Author: {crewmate.speed}</p>\r\n      <p>Description: {crewmate.color}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CrewmateInfo;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACzB,MAAM;IAAEC;EAAF,IAASH,SAAS,EAAxB;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,YAAY;MAChC,IAAI;QACF,MAAM;UAAEC,IAAI,EAAEC,YAAR;UAAsBC;QAAtB,IAAgC,MAAMV,QAAQ,CACjDW,IADyC,CACpC,WADoC,EAEzCC,MAFyC,GAGzCC,EAHyC,CAGtC,IAHsC,EAGhCX,EAHgC,EAIzCY,MAJyC,EAA5C;;QAMA,IAAIJ,KAAJ,EAAW;UACT,MAAMA,KAAN;QACD;;QAEDN,WAAW,CAACK,YAAD,CAAX;QACAH,UAAU,CAAC,KAAD,CAAV;MACD,CAbD,CAaE,OAAOI,KAAP,EAAc;QACdK,OAAO,CAACL,KAAR,CAAc,0BAAd,EAA0CA,KAAK,CAACM,OAAhD;MACD;IACF,CAjBD;;IAmBAT,aAAa;EACd,CArBQ,EAqBN,CAACL,EAAD,CArBM,CAAT;;EAuBA,IAAIG,OAAJ,EAAa;IACX,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,IAAI,CAACF,QAAL,EAAe;IACb,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAA,wBACE;MAAA,UAAKA,QAAQ,CAACc;IAAd;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,uBAAYd,QAAQ,CAACe,KAArB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,4BAAiBf,QAAQ,CAACgB,KAA1B;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CA3CD;;GAAMlB,Y;UACWF,S;;;KADXE,Y;AA6CN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}